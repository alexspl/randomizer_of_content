<?php

function randomizer_of_content_menu() {
  $items = array();

  $items['admin/settings/randomizer_of_content'] = array(
    'title' => 'Randomizer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('randomizer_of_content_admin'),
    'access callback' => TRUE,
  );
  return $items;
}

function randomizer_of_content_admin() {
  $form = array();

  $form['forms_count'] = array(
    '#type' => 'textfield',
    '#title' => t('Number of forms'),
    '#default_value' => variable_get('forms_count'),
    '#size' => 2,
    '#maxlength' => 2,
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function randomizer_of_content_block_info() {
  $blocks = array();
  $blocks['randomizer'] = array(
    'info' => t('Randomizer'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

function randomizer_of_content_block_configure($delta = '') {
  $form = array();
  $nodes = node_type_get_types();

  switch ($delta) {
    case 'randomizer' :
      $n = variable_get('forms_count');
      for ($i = 1; $i <= $n; $i++) {
        //Content type select box:
        foreach ($nodes as $node) {
          $options[$node->type] = $node->name;
        }
        //Beginnig of modification
        $form['#tree'] = TRUE;
        $form['content_fieldset'] = array(
          '#type' => 'fieldset',
          '#title' => t('Nodes nodes nodes'),
          // Set up the wrapper so that AJAX will be able to replace the fieldset.
          '#prefix' => '<div id="names-fieldset-wrapper">',
          '#suffix' => '</div>',
  );    //End

        $form['content_fieldset']['node_type_' . $i] = array( //Added fieldset
          '#type' => 'select',
          '#title' => t('Select content type'),
          '#options' => $options,
          '#default_value' => variable_get('node_type_' . $i, ''),
          '#required' => TRUE,
          '#group' => 'vertical_tabs',
        );


        //Number of entries text field:
        $form['content_fieldset']['entries_count_' . $i] = array( //Added fieldset here too
          '#title' => t('Number of content types'),
          '#type' => 'textfield',
          '#required' => TRUE,
          '#default_value' => variable_get('entries_count_' . $i, ''),
          '#group' => 'vertical_tabs',
        );

        //Added submit for button
        $form['content_fieldset']['add_content'] = array(
          '#type' => 'submit',
          '#value' => t('Add one more'),
          '#submit' => array('ajax_example_add_more_add_one'),
          );
      }
  }
  dpm($form);
  return $form;
}

function randomizer_of_content_add_more_add_one($form, &$form_state) {
  $form_state['num_names']++; //Need to add the if statement for this
  $form_state['rebuild'] = TRUE;
}

function randomizer_of_content_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'randomizer' :
      $n = variable_get('forms_count');
      //Save content type selection
      for ($i = 1; $i <= $n; $i++) {
        variable_set('node_type_' . $i, $edit['node_type_' . $i]);
        variable_set('entries_count_' . $i, $edit['entries_count_' . $i]);
      }
      break;
  }
}

/**
 * custom html block
 * @return string
 */
function randomizer_of_content_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'randomizer':
      $block['content'] = randomizer_of_content_contents();
      break;
  }
  return $block;
}

/**
 * custom html block
 * @return string
 */
function randomizer_of_content_contents() {
  $n = variable_get('forms_count');

  $query = "";
  $placeholders = array();
  for ($i = 1; $i <= $n; $i++) {
    $placeholders[':type' . $i] = variable_get('node_type_' . $i);
    ;
    $maxlimit = (int) variable_get('entries_count_' . $i);
    $sub_select = "(SELECT title FROM {node} WHERE type = :type" . $i . " LIMIT " . $maxlimit . ")";
    if ($i == 1) {
      $query .= $sub_select;
    }
    else {
      $query .= " UNION " . $sub_select;
    }
  }

  $result = db_query($query . " ORDER BY RAND()", $placeholders)->fetchAll();
  dpm($result);
  return ' ';

  //return $result;
}